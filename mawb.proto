
package mawb;

message InputDisp {
    optional string id = 1;
    optional int32 output = 2;
}

message FluidSynthDisp {
    optional string id = 1;
    optional string sound_font = 2;
}

message Config {
    repeated InputDisp input_disp = 1;
    repeated FluidSynthDisp fluid_disp = 2;
}

enum SequencerState {
    // No tracks are being played.
    IDLE = 0;

    // Recorded tracks are being played.
    PLAY = 1;

    // The sequencer will begin recording on all inputs as soon as an
    // event is received from any of them.
    LATCHED_RECORD = 2;

    // The sequencer is recording events on all inputs.
    RECORD = 3;
}

message Project {
    repeated Section section = 1;
}

message Section {
    optional string name = 1;
    repeated PBTrack track = 2;
}

message PBTrack {
    optional string name = 1;
    optional bytes events = 2;
}

// Sets the initial state of an event dispatcher.
// The initial state is a set of midi events that are sent to the event
// dispatcher at the time when this message is sent and when the timer is set
// to zero.
message SetInitialState {
    // The name of the dispatcher.
    optional string dispatcher = 1;

    // A midi track containing the events.
    optional bytes events = 2;
}

message RPC {
    // Begin Recording. - create a record track, add it to an input.

    // Add nodes to an existing configuration.
    repeated Config add_nodes = 1;

    // Test function.  Echoes the text to the console.
    repeated string echo = 2;

    // Change the sequencer state to that requested.
    optional SequencerState change_sequencer_state = 3;

    // Set the clock time.
    repeated uint32 set_ticks = 4;

    // Store the current state in the specified file.
    optional string save_state = 5;

    // Load the current state from the specified file.
    optional string load_state = 6;

    // Add a new track to the current section of the project.
    optional PBTrack add_track = 7;

    // Set the initial state of an event dispatcher.
    repeated SetInitialState set_initial_state = 8;
}
